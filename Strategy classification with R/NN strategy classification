# -*- coding: utf-8 -*-
"""
Created on Mon Jan 31 09:42:47 2022

@author: Juan
"""

import pandas as pd
import tensorflow as tf
from tensorflow import keras
from tensorflow.keras import layers
import os


#importing dataframe
path = './Dropbox/Papaer JP OC/Machine learning'
os.chdir(path)

df = pd.read_excel('dia9_controles_ML_data.xlsx')

# I know that data came clean so no cleaning is required

df_norm = (df-df.min())/(df.max()-df.min())

porcentage_corr = []

N = 100

for i in range(N):

    # preparing  training dataset / test dataset
    # in a pseudorandom way campatible with our bootstrap
    data_test = df_norm.sample(frac = 0.2)
    data_train = df_norm[~df_norm.isin(data_test)].dropna()
    
    train_labels = data_train.pop('Cluster')
    test_labels = data_test.pop('Cluster')
    
    # bilding the model
    model = keras.Sequential([
        layers.Dense(16, activation='relu'),
        layers.Dense(24, activation='relu'),
        layers.Dense(8, activation='relu'),
        layers.Dense(1, activation='sigmoid')])
    
    model.compile(
        optimizer=tf.optimizers.Adam(learning_rate=0.1),   
        loss=tf.keras.losses.BinaryCrossentropy(),
        metrics=tf.keras.metrics.BinaryAccuracy()
    )
    
    history = model.fit(
        data_train,
        train_labels,
        epochs = 50,
        validation_split = 0.2,
        verbose = 1, 
    )
    
    prediction = model.predict(data_test)
    
    # calculating concordance between NN and cluster method
    corrects = 0
    for idx, val in enumerate(prediction):
        if prediction[idx] > 0.5:
            if test_labels.iloc[idx] == 1:
                corrects += 1
        else:
            if test_labels.iloc[idx] == 0:
                corrects += 1
                
    porcentage_corr.append(corrects/6)            
                 
                
ans = sum(porcentage_corr)/len(porcentage_corr)

# Obtengo un 94% de concordancia entre la clasificación por clusters hecha en R
# valiendome de solo 3 variables seleccionadas por CPA y alimentando con eso la 
# construccion del dendograma 
# vs. la clasificación por una red neuronal de clasificación simple
# alimentada con todas 16 variables y que cuenta con las etiquetas del metodo de clusters.

